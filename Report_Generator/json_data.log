This is pdfTeX, Version 3.141592653-2.6-1.40.24 (MiKTeX 22.10) (preloaded format=pdflatex 2022.10.17)  3 NOV 2022 20:39
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**./json_data.tex
(json_data.tex
LaTeX2e <2022-06-01> patch level 5
L3 programming layer <2022-09-28>
(C:\Users\jyoth\AppData\Local\Programs\MiKTeX\tex/latex/base\article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(C:\Users\jyoth\AppData\Local\Programs\MiKTeX\tex/latex/base\size10.clo
File: size10.clo 2021/10/04 v1.4n Standard LaTeX file (size option)
)
\c@part=\count185
\c@section=\count186
\c@subsection=\count187
\c@subsubsection=\count188
\c@paragraph=\count189
\c@subparagraph=\count190
\c@figure=\count191
\c@table=\count192
\abovecaptionskip=\skip47
\belowcaptionskip=\skip48
\bibindent=\dimen138
)
(C:\Users\jyoth\AppData\Local\Programs\MiKTeX\tex/latex/base\inputenc.sty
Package: inputenc 2021/02/14 v1.3d Input encoding file
\inpenc@prehook=\toks16
\inpenc@posthook=\toks17
)
(C:\Users\jyoth\AppData\Local\Programs\MiKTeX\tex/latex/l3backend\l3backend-pdf
tex.def
File: l3backend-pdftex.def 2022-09-28 L3 backend support: PDF output (pdfTeX)
\l__color_backend_stack_int=\count193
\l__pdf_internal_box=\box51
) (json_data.aux)
\openout1 = `json_data.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 8.
LaTeX Font Info:    ... okay on input line 8.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 8.
LaTeX Font Info:    ... okay on input line 8.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 8.
LaTeX Font Info:    ... okay on input line 8.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 8.
LaTeX Font Info:    ... okay on input line 8.
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line 8.
LaTeX Font Info:    ... okay on input line 8.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 8.
LaTeX Font Info:    ... okay on input line 8.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 8.
LaTeX Font Info:    ... okay on input line 8.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <12> on input line 10.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <8> on input line 10.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <6> on input line 10.

! Missing $ inserted.
<inserted text> 
                $
l.22   int[3] ether_
                    balances; // storage signed integer array
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 22.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 22.
! Extra }, or forgotten $.
l.28 }
      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.29 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (206.09612pt too wide) in paragraph at lines 21--29
[]\OT1/cmr/m/n/10 contract A  int[3] ether$[]\OML/cmm/m/it/10 alances\OT1/cmr/m
/n/10 ; \OML/cmm/m/it/10 ==storagesignedintegerarrayfunctionbad\OT1/cmr/m/n/10 
0()\OML/cmm/m/it/10 private[]$ 
 []

LaTeX Font Info:    Trying to load font information for OMS+cmr on input line 3
2.
(C:\Users\jyoth\AppData\Local\Programs\MiKTeX\tex/latex/base\omscmr.fd
File: omscmr.fd 2019/12/16 v2.5j Standard LaTeX font definitions
)
LaTeX Font Info:    Font shape `OMS/cmr/m/n' in size <10> not available
(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 32.

[1

{C:/Users/jyoth/AppData/Local/MiKTeX/fonts/map/pdftex/pdftex.map}]
Overfull \hbox (39.973pt too wide) in paragraph at lines 76--79
[]\OT1/cmr/m/n/10 function a(address from, ad-dress to, uint256 amount) pub-lic
  erc20.transferFrom(from,
 []

! Missing $ inserted.
<inserted text> 
                $
l.94 ... bits unsigned number ranging from 0 to 2^
                                                  8-1. In computer programmi...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.97 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (838.33745pt too wide) in paragraph at lines 93--97
\OT1/cmr/m/n/10 2$[] \OMS/cmsy/m/n/10 ^^@ \OT1/cmr/m/n/10 1\OML/cmm/m/it/10 :In
computerprogramming; anintegeroverflowoccurswhenanarithmeticoperationattemptsto
createanumericvaluethatisoutsideoftherangethatcanberepresentedwithagivennumbero
fbitseitherlargerthanthemaximumorlowerthantheminimumrepresentablevalue: \OMS/cm
sy/m/n/10 ^^C
 []


Overfull \hbox (38.90819pt too wide) in paragraph at lines 93--97
\OML/cmm/m/it/10 Divisionissues:Somewrongwillhappenwhenintegerorfloatnumbersare
dividedbyzero: \OMS/cmsy/m/n/10 ^^C
 []


Overfull \hbox (957.68297pt too wide) in paragraph at lines 93--97
\OML/cmm/m/it/10 Typedeductionoverflow:InSolidity; whendeclaringavariableastype
var; thecompilerusestypedeductiontoautomaticallyinferthesmallestpossibletypefro
mthefirstexpressionthatisassignedtothevariable:Thus; thededucedtypemaynotbeappr
opriate; anditcanincuroverflowbugslater\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 seethe
example\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 :$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.106 pragma solidity ^
                       0.4.21;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.110 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.110 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (82.83409pt too wide) in paragraph at lines 101--110
[]\OT1/cmr/m/n/10 Integer over-flow/underflow /* * @source: https://capturethee
ther.com/challenges/math/token-
 []


Overfull \hbox (450.00888pt too wide) in paragraph at lines 101--110
\OT1/cmr/m/n/10 sale/ * @au-thor: Steve Marx */ pragma so-lid-ity $[]\OML/cmm/m
/it/10 :\OT1/cmr/m/n/10 4\OML/cmm/m/it/10 :\OT1/cmr/m/n/10 21; \OML/cmm/m/it/10
 contractTokenSaleChallenge[]$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.111     function TokenSaleChallenge(address _
                                               player) public payable {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.114 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (62.60364pt too wide) in paragraph at lines 111--114
[]\OT1/cmr/m/n/10 function To-ken-SaleChal-lenge(address $[]\OML/cmm/m/it/10 la
yer\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 publicpayable[]$ 
 []


Overfull \hbox (3.19508pt too wide) in paragraph at lines 115--118
[]\OT1/cmr/m/n/10 function is-Com-plete() pub-lic view re-turns (bool)  re-turn
 ad-dress(this).balance
 []

! Missing $ inserted.
<inserted text> 
                $
l.120 ...  require(msg.value == numTokens * PRICE_
                                                  PER_TOKEN);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.121 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.129     /*function unsigned_
                              division(uint32 x, uint32 y) returns (int r) {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.133 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (62.49826pt too wide) in paragraph at lines 129--133
[]\OT1/cmr/m/n/10 /*function unsigned$[]\OML/cmm/m/it/10 ivision\OT1/cmr/m/n/10
 (\OML/cmm/m/it/10 uint\OT1/cmr/m/n/10 32\OML/cmm/m/it/10 x; uint\OT1/cmr/m/n/1
0 32\OML/cmm/m/it/10 y\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 returns\OT1/cmr/m/n/10 
(\OML/cmm/m/it/10 intr\OT1/cmr/m/n/10 )[] \OMS/cmsy/m/n/10 ^^C
 []

! Missing $ inserted.
<inserted text> 
                $
l.134     function signed_
                          division(int x, int y) returns (int) {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.135       //if ((y == 0) || ((x == -2**255) &
                                               & (y == -1))) { throw; }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.135       //if ((y == 0) || ((x == -2**255) &&
                                                 (y == -1))) { throw; }
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.138 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (156.46468pt too wide) in paragraph at lines 134--138
[]\OT1/cmr/m/n/10 function signed$[]\OML/cmm/m/it/10 ivision\OT1/cmr/m/n/10 (\O
ML/cmm/m/it/10 intx; inty\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 returns\OT1/cmr/m/n/
10 (\OML/cmm/m/it/10 int\OT1/cmr/m/n/10 )[]$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.142 contract For_
                   Test {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.158 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.158 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (1052.65285pt too wide) in paragraph at lines 141--158
[]\OT1/cmr/m/n/10 Type de-duc-tion over-flow con-tract For$[]\OML/cmm/m/it/10 e
st[]$ 
 []

[2]
! Missing $ inserted.
<inserted text> 
                $
l.176     uint[2][3] bad_
                         arr = [[1, 2], [3, 4], [5, 6]];
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.177 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.180         bytes memory b = abi.encode(bad_
                                              arr);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.181     }
           
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.182 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.183 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.184 abi.encode(bad_
                     arr) in a call to bad() will incorrectly encode the arr...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.185 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (170.1859pt too wide) in paragraph at lines 184--185
[]\OT1/cmr/m/n/10 abi.encode(bad$[]\OML/cmm/m/it/10 rr\OT1/cmr/m/n/10 )\OML/cmm
/m/it/10 inacalltobad\OT1/cmr/m/n/10 ()\OML/cmm/m/it/10 willincorrectlyencodeth
earrayas\OT1/cmr/m/n/10 [[1\OML/cmm/m/it/10 ; \OT1/cmr/m/n/10 2]\OML/cmm/m/it/1
0 ; \OT1/cmr/m/n/10 [2\OML/cmm/m/it/10 ; \OT1/cmr/m/n/10 3]\OML/cmm/m/it/10 ; \
OT1/cmr/m/n/10 [3\OML/cmm/m/it/10 ; \OT1/cmr/m/n/10 4]]\OML/cmm/m/it/10 andlead
tounintendedbehavior:$ 
 []


Overfull \hbox (42.58405pt too wide) in paragraph at lines 199--200
[]\OT1/cmr/m/n/10 For ex-am-ple, it's easy to miss the trail-ing paren-the-ses 
in msg.sender.call.value(xx)("");,
 []


Overfull \hbox (10.63956pt too wide) in paragraph at lines 199--200
\OT1/cmr/m/n/10 which could lead to a func-tion pro-ceed-ing with-out trans-fer
-ring funds to msg.sender.
 []

! Missing $ inserted.
<inserted text> 
                $
l.204 pragma solidity ^
                       0.5.0;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.205 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (23.83405pt too wide) in paragraph at lines 209--216
[]\OT1/cmr/m/n/10 // Ac-cept de-posit func-tion de-posit(uint amount) pub-lic p
ayable  re-quire(msg.value
 []


Overfull \hbox (17.81555pt too wide) in paragraph at lines 209--216
\OT1/cmr/m/n/10 == amount, 'in-cor-rect amount'); // Should up-date user bal-an
ce bal-ance[msg.sender]
 []

[3]
! Missing $ inserted.
<inserted text> 
                $
l.306     function setRate(_
                            rate) public onlyOwner {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.309 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.310     function setCap(_
                           cap) public {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.314 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.315 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[4]
! Missing $ inserted.
<inserted text> 
                $
l.360     function my_
                      func(uint a, uint b) public{
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.363 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.364 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (49.58282pt too wide) in paragraph at lines 358--364
[]\OT1/cmr/m/n/10 contract My-Conc us-ing Safe-Math for uint; func-tion my$[]\O
ML/cmm/m/it/10 unc\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 uinta; uintb\OT1/cmr/m/n/10
 )\OML/cmm/m/it/10 public[]$ 
 []

[5] [6]
! Missing $ inserted.
<inserted text> 
                $
l.474 pragma solidity ^
                       0.4.16;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.475 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (22.37105pt too wide) in paragraph at lines 492--499
[]\OT1/cmr/m/n/10 function claim-Re-ward(uint256 sub-mis-sion)  re-quire (!clai
med); re-quire(submission
 []

[7]
! Missing $ inserted.
<inserted text> 
                $
l.599     mapping (address => uint256) internal _
                                                 balances;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.600 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.601     function transfer_
                            public(address to, uint256 value) public {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.603 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.603 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (89.37643pt too wide) in paragraph at lines 601--603
[]\OT1/cmr/m/n/10 function transfer$[]\OML/cmm/m/it/10 ublic\OT1/cmr/m/n/10 (\O
ML/cmm/m/it/10 addressto; uint\OT1/cmr/m/n/10 256\OML/cmm/m/it/10 value\OT1/cmr
/m/n/10 )\OML/cmm/m/it/10 public[]$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.604         _
               balances[msg.sender] -= value;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.606     }
           
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.607 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.608     function transfer_
                            external(address to, uint256 value) external {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.610 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.610 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (113.21588pt too wide) in paragraph at lines 608--610
[]\OT1/cmr/m/n/10 function transfer$[]\OML/cmm/m/it/10 xternal\OT1/cmr/m/n/10 (
\OML/cmm/m/it/10 addressto; uint\OT1/cmr/m/n/10 256\OML/cmm/m/it/10 value\OT1/c
mr/m/n/10 )\OML/cmm/m/it/10 external[]$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.611         _
               balances[msg.sender] -= value;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.613     }
           
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.614 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.615 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[8]
! Missing $ inserted.
<inserted text> 
                $
l.662 * @vulnerable_
                    at_lines: 19
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.664 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (63.44527pt too wide) in paragraph at lines 659--664
[]\OT1/cmr/m/n/10 /* * @source: http://blockchain.unica.it/projects/ethereum-su
rvey/attacks.htmlsimpledao
 []

! Missing $ inserted.
<inserted text> 
                $
l.665 pragma solidity ^
                       0.4.2;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.666 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (39.14777pt too wide) in paragraph at lines 674--682
\OT1/cmr/m/n/10 <re-port> REEN-TRANCY bool res = msg.sender.call.value(amount)(
); credit[msg.sender]-
 []

[9] [10]
! Missing $ inserted.
<inserted text> 
                $
l.784 ...ription}:If a modifier does not execute _
                                                   or revert, the execution ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.785 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (302.2073pt too wide) in paragraph at lines 784--785
[]\OT1/cmr/bx/n/10 Description\OT1/cmr/m/n/10 :If a mod-i-fier does not ex-e-cu
te $[]\OML/cmm/m/it/10 rrevert; theexecutionofthefunctionwillreturnthedefaultva
lue; whichcanbemisleadingforthecaller:$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.791       _
             ;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.792     }
           
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.793 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.795 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.814 pragma solidity ^
                       0.4.24;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.815 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.823     function get_
                       next_expiration(uint earlier_time) private returns (u...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.826 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.827 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (227.45023pt too wide) in paragraph at lines 823--827
[]\OT1/cmr/m/n/10 function get$[]\OML/cmm/m/it/10 ext[]xpiration\OT1/cmr/m/n/10
 (\OML/cmm/m/it/10 uintearlier[]ime\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 privateret
urns\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 uint\OT1/cmr/m/n/10 )[]$ 
 []


Overfull \hbox (8.112pt too wide) in paragraph at lines 846--853
\OT1/cmr/m/n/10 dress)  ad-dress pub-lic mul-ti-sig = 0xf64B584972FE6055a770477
670208d737Fff282f;
 []


Overfull \hbox (91.72319pt too wide) in paragraph at lines 854--855
[]\OT1/cmr/m/n/10 Do not for-get to check the con-tract at the ad-dress 0xf64B5
84972FE6055a770477670208d737Fff282f
 []

[11]
! Missing $ inserted.
<inserted text> 
                $
l.874 pragma solidity ^
                       0.5.1;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.882 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (614.11269pt too wide) in paragraph at lines 874--882
[]\OT1/cmr/m/n/10 pragma so-lid-ity $[]\OML/cmm/m/it/10 :\OT1/cmr/m/n/10 5\OML/
cmm/m/it/10 :\OT1/cmr/m/n/10 1; \OML/cmm/m/it/10 contractSignature[]$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.930 * @source: https://youtu.be/P_
                                    Mtd5Fc_3E
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.934 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.937     uint _
                secretNumber;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.941 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (202.94836pt too wide) in paragraph at lines 935--941
[]\OT1/cmr/m/n/10 contract Guess-TheNum-ber  uint $[]\OML/cmm/m/it/10 ecretNumb
er\OT1/cmr/m/n/10 ; \OML/cmm/m/it/10 addresspayable[]wner\OT1/cmr/m/n/10 ; \OML
/cmm/m/it/10 eventsuccess\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 string\OT1/cmr/m/n/1
0 ); \OML/cmm/m/it/10 eventwrongNumber\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 string\
OT1/cmr/m/n/10 );$ 
 []


Overfull \hbox (3.12096pt too wide) in paragraph at lines 946--950
[]\OT1/cmr/m/n/10 uint p = ad-dress(this).balance; checkAnd-Trans-fer-Prize(/*T
he prize/*rebmun
 []

! Missing $ inserted.
<inserted text> 
                $
l.953         if(n == _
                       secretNumber)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.962     }
           
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.963   }
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.964 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (410.21114pt too wide) in paragraph at lines 951--964
\OT1/cmr/m/n/10 ter-nal re-turns(bool)  if(n == $[]\OML/cmm/m/it/10 ecretNumber
\OT1/cmr/m/n/10 )[]\OML/cmm/m/it/10 else[]$ 
 []

[12]
! Missing $ inserted.
<inserted text> 
                $
l.981 pragma solidity ^
                       0.4.24;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.982 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.986     function sensitive_
                             function(address owner) public {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.990 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (41.97398pt too wide) in paragraph at lines 986--990
[]\OT1/cmr/m/n/10 function sensitive$[]\OML/cmm/m/it/10 unction\OT1/cmr/m/n/10 
(\OML/cmm/m/it/10 addressowner\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 public[]$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.991     function alternate_
                             sensitive_function() public {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.996 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.997 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (153.24512pt too wide) in paragraph at lines 991--997
[]\OT1/cmr/m/n/10 function alternate$[]\OML/cmm/m/it/10 ensitive[]unction\OT1/c
mr/m/n/10 ()\OML/cmm/m/it/10 public[]$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.998 sensitive_
                function.owner shadows Bug.owner. As a result, the use of ow...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.999 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (150.43431pt too wide) in paragraph at lines 998--999
[]\OT1/cmr/m/n/10 sensitive$[]\OML/cmm/m/it/10 unction:ownershadowsBug:owner:As
aresult; theuseofownerinsensitive[]unctionmightbeincorrect:$ 
 []

[13]
! Missing $ inserted.
<inserted text> 
                $
l.1077     constructor(bytes32 _
                                hash) public payable {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1081 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1114     uint loop_
                     count = 100;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1116 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1118         for (uint i=0; i < loop_
                                       count; i++){
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1121     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1122 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1124       uint local_
                        variable = state_variable;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1129     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1130 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1132 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (441.32549pt too wide) in paragraph at lines 1123--1132
\OT1/cmr/m/n/10 0; \OML/cmm/m/it/10 i < loop[]ount\OT1/cmr/m/n/10 ; \OML/cmm/m/
it/10 i \OT1/cmr/m/n/10 + +)[]\OML/cmm/m/it/10 state[]ariable \OT1/cmr/m/n/10 =
 \OML/cmm/m/it/10 local[]ariable\OT1/cmr/m/n/10 ; \OML/cmm/m/it/10 Incrementing
state[]ariableinaloopincursalotofgasbecauseofexpensiveSSTOREs; whichmightleadto
anout \OMS/cmsy/m/n/10 ^^@
 []

[14] [15]
Overfull \hbox (0.6127pt too wide) in paragraph at lines 1286--1287
[]\OT1/cmr/bx/n/10 Description\OT1/cmr/m/n/10 :ERC20 bal-ance/allowance is mod-
i-fied with-out when-Not-Paused
 []

[16]
Overfull \hbox (68.41751pt too wide) in paragraph at lines 1369--1373
[]\OT1/cmr/m/n/10 function cal-cu-late-Bonus(uint amount) re-turns (uint)  re-t
urn amount/DELIMITER*BONUS;
 []


Underfull \hbox (badness 10000) in paragraph at lines 1369--1373

 []

[17]
! Missing $ inserted.
<inserted text> 
                $
l.1392 pragma solidity ^
                        0.4.16;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1393 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[18] [19]
! Missing $ inserted.
<inserted text> 
                $
l.1543     function writeData(uint[] _
                                      data) external {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1549 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1550 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (197.45839pt too wide) in paragraph at lines 1543--1550
[]\OT1/cmr/m/n/10 function write-Data(uint[] $[]\OML/cmm/m/it/10 ata\OT1/cmr/m/
n/10 )\OML/cmm/m/it/10 external[]$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1567 pragma solidity ^
                        0.4.0;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1568 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[20]
! Missing $ inserted.
<inserted text> 
                $
l.1651 function call_
                     token(bytes data){
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1654 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1655 ...points to an ERC20 token. Bob uses call_
                                                  token to call the transfer...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1656 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (223.31288pt too wide) in paragraph at lines 1655--1656
[]\OT1/cmr/m/n/10 token` points to an ERC20 to-ken. Bob uses call$[]\OML/cmm/m/
it/10 okentocallthetransferfunctionoftokentowithdrawalltokensheldbythecontract:
$ 
 []

[21]
! Missing $ inserted.
<inserted text> 
                $
l.1746 pragma solidity ^
                        0.4.0;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1747 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[22]
Overfull \hbox (25.62106pt too wide) in paragraph at lines 1778--1779
\OT1/cmr/m/n/10 blocks. Be-sides, it al-ways re-turns 0 for the cur-rent block,
 i.e. block-hash(block.number)
 []


Overfull \hbox (14.36177pt too wide) in paragraph at lines 1787--1792
[]\OT1/cmr/m/n/10 contract My-Con-tract  func-tion cur-rent-Block-Hash() pub-li
c view re-turns(bytes32)
 []


Overfull \hbox (90.14905pt too wide) in paragraph at lines 1813--1818
\OT1/cmr/m/n/10 < re-ceivers.length; i++)  ad-dress(this).delegatecall(abi.enco
deWithSignature("addBalance(address)",
 []


Overfull \hbox (6.96355pt too wide) in paragraph at lines 1835--1836
\OT1/cmr/m/n/10 fer. The rec-om-mended way to per-form checked ether pay-ments 
is addr.transfer(x),
 []

[23]
! Missing $ inserted.
<inserted text> 
                $
l.1902     function ownerOf(uint256 _
                                     tokenId) external view returns (bool);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1904 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1905 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (29.49333pt too wide) in paragraph at lines 1901--1905
[]\OT1/cmr/m/n/10 contract To-ken func-tion ownerOf(uint256 $[]\OML/cmm/m/it/10
 okenId\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 externalviewreturns\OT1/cmr/m/n/10 (\O
ML/cmm/m/it/10 bool\OT1/cmr/m/n/10 ); \OML/cmm/m/it/10 ==:::$ 
 []

[24]
! Missing $ inserted.
<inserted text> 
                $
l.1979   uint s_
                a;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1980 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1982     assert((s_
                     a += 1) > 10);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1983   }
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1984 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1986 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (216.31404pt too wide) in paragraph at lines 1981--1986
[]\OT1/cmr/m/n/10 function bad() pub-lic  assert((s$[]+ = 1) \OML/cmm/m/it/10 >
 \OT1/cmr/m/n/10 10); \OML/cmm/m/it/10 Theassertinbad\OT1/cmr/m/n/10 ()\OML/cmm
/m/it/10 incrementsthestatevariables[]whilecheckingforthecondition:$ 
 []

[25] (json_data.aux) )
(\end occurred inside a group at level 18)

### simple group (level 18) entered at line 1981 ({)
### simple group (level 17) entered at line 1978 ({)
### simple group (level 16) entered at line 1901 ({)
### simple group (level 15) entered at line 1520 ({)
### simple group (level 14) entered at line 1123 ({)
### simple group (level 13) entered at line 1117 ({)
### simple group (level 12) entered at line 1112 ({)
### simple group (level 11) entered at line 1040 ({)
### simple group (level 10) entered at line 983 ({)
### simple group (level 9) entered at line 952 ({)
### simple group (level 8) entered at line 936 ({)
### simple group (level 7) entered at line 816 ({)
### simple group (level 6) entered at line 790 ({)
### simple group (level 5) entered at line 789 ({)
### simple group (level 4) entered at line 597 ({)
### simple group (level 3) entered at line 295 ({)
### simple group (level 2) entered at line 179 ({)
### simple group (level 1) entered at line 175 ({)
### bottom level 
Here is how much of TeX's memory you used:
 510 strings out of 475385
 10067 string characters out of 2776906
 357964 words of memory out of 3000000
 21955 multiletter control sequences out of 15000+600000
 473514 words of font info for 42 fonts, out of 8000000 for 9000
 1141 hyphenation exceptions out of 8191
 34i,6n,38p,692b,493s stack positions out of 10000i,1000n,20000p,200000b,80000s
<C:/Users/jyoth/AppData/Local/Programs/MiKTeX/fonts/type1/publi
c/amsfonts/cm/cmbx10.pfb><C:/Users/jyoth/AppData/Local/Programs/MiKTeX/fonts/ty
pe1/public/amsfonts/cm/cmbx12.pfb><C:/Users/jyoth/AppData/Local/Programs/MiKTeX
/fonts/type1/public/amsfonts/cm/cmmi10.pfb><C:/Users/jyoth/AppData/Local/Progra
ms/MiKTeX/fonts/type1/public/amsfonts/cm/cmmi7.pfb><C:/Users/jyoth/AppData/Loca
l/Programs/MiKTeX/fonts/type1/public/amsfonts/cm/cmr10.pfb><C:/Users/jyoth/AppD
ata/Local/Programs/MiKTeX/fonts/type1/public/amsfonts/cm/cmr12.pfb><C:/Users/jy
oth/AppData/Local/Programs/MiKTeX/fonts/type1/public/amsfonts/cm/cmr17.pfb><C:/
Users/jyoth/AppData/Local/Programs/MiKTeX/fonts/type1/public/amsfonts/cm/cmr7.p
fb><C:/Users/jyoth/AppData/Local/Programs/MiKTeX/fonts/type1/public/amsfonts/cm
/cmsy10.pfb><C:/Users/jyoth/AppData/Local/Programs/MiKTeX/fonts/type1/public/am
sfonts/cm/cmsy7.pfb>
Output written on json_data.pdf (25 pages, 196481 bytes).
PDF statistics:
 133 PDF objects out of 1000 (max. 8388607)
 0 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

