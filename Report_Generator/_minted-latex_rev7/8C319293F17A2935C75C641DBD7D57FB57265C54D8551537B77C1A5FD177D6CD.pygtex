\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
pragma solidity \PYGZgt{}=0.5.0;
pragma experimental ABIEncoderV2;

import \PYGZdq{}./base.sol\PYGZdq{};

contract DerivedA is Base \PYGZob{}
    // i is not used in the current contract
    A i = A(1);

    int internal j = 500;

    function call(int a) public \PYGZob{}
        assign1(a);
    \PYGZcb{}

    function assign3(A memory x) public returns (uint) \PYGZob{}
        return g[1] + x.a + uint(j);
    \PYGZcb{}

    function ret() public returns (int)\PYGZob{}
        return this.e();

    \PYGZcb{}
  int internal j = 500;
function call(int a) public \PYGZob{}
        assign1(a);
    \PYGZcb{}

    function assign3(A memory x) public returns (uint) \PYGZob{}
        return g[1] + x.a + uint(j);
    \PYGZcb{}

    function ret() public returns (int)\PYGZob{}
        return this.e();
  \PYGZcb{}
\PYGZcb{}
\end{Verbatim}
